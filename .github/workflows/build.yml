name: Build GroxParts

on:
  push:
    branches-ignore:
      - 'gh-pages'
  pull_request:
  workflow_dispatch:

env:
# Build Packages Variables
  SPORE_MODDER_FX_TAG: 'v2.2.10'
  SPORE_MODDER_FX_FILE: 'SporeModder.FX.zip'

#Build Sporemod Variables
  SPOREMOD_DLLS_BUILD: '2.5.326'
  SPOREMOD_PREFIX: 'GroxParts'

jobs:
  build-packages:
    name: Build Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
          java-package: 'jre'
      - name: Setup SMFX
        uses: robinraju/release-downloader@v1
        with:
          repository: 'emd4600/SporeModder-FX'
          tag: ${{ env.SPORE_MODDER_FX_TAG }}
          fileName: ${{ env.SPORE_MODDER_FX_FILE }}
          tarBall: false
          zipBall: false
          out-file-path: ''
          extract: true
      - run: mkdir -p Packages
      - name: Build SMFX Project
        run: |
          cd "SporeModder FX"
          java -jar SporeModderFX.jar pack ../GroxParts ../Packages/GroxParts.package
      - name: Upload Packages
        uses: actions/upload-artifact@v4
        with:
          name: packages
          retention-days: 1
          compression-level: 0
          path: Packages/*

  build-sporemod:
    name: Build Sporemod
    needs: [ build-packages ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:      
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/Sporemod
          merge-multiple: true

      # any tag that doesn't match v.X.X.X (with an optional single character path, eg v1.2.73b) will be marked as experimental
      - run: echo "${{ github.ref_name }}" | grep -qE '^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+[[:alpha:]]?$'
        id: test_experimental
        continue-on-error: true
      - run: echo "SPOREMOD_EXPERIMENTAL=${{ steps.test_experimental.outcome != 'success' }}" >> $GITHUB_ENV

      - uses: iamazeem/substitute-action@v1
        with:
          input-files: |
            Sporemod/ModInfo.xml
          enable-in-place: true
      - run: ls ${{ github.workspace }}/Sporemod

      - if: ${{ contains(github.ref_type, 'tag') }}
        run: echo "SPOREMOD_NAME=${{ env.SPOREMOD_PREFIX }}${{ github.ref_name }}.sporemod" >> $GITHUB_ENV
      - if: ${{ ! contains(github.ref_type, 'tag') }}
        run: echo "SPOREMOD_NAME=${{ env.SPOREMOD_PREFIX }}${{ github.ref_name }}-$(git rev-parse --short HEAD).sporemod" >> $GITHUB_ENV
          
      - run: echo "DRAFT_RELEASE_NAME=$(echo "${{ github.event.repository.name }} ${{ github.ref_name }}" | tr '-' ' ')" >> $GITHUB_ENV

      - name: Create sporemod
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: 'zip'
          filename: ${{ env.SPOREMOD_NAME }}
          path: 'Sporemod'
          custom: '-j -9'
  
      - name: Create draft release
        if: ${{ contains(github.ref_type, 'tag') }}
        uses: ncipollo/release-action@v1.16.0
        with:
          draft: true
          name: ${{ env.DRAFT_RELEASE_NAME }}
          prerelease: ${{ env.SPOREMOD_EXPERIMENTAL }}
          makeLatest: true
          tag: ${{ github.ref_name }}
          artifacts: ${{ env.SPOREMOD_NAME }}

      - name: Upload sporemod artifact
        if: ${{ ! contains(github.ref_type, 'tag') }}
        uses: actions/upload-artifact@v4
        with:
          name: sporemod
          retention-days: 30
          compression-level: 0
          path: ${{ env.SPOREMOD_NAME }}
